{"version":3,"sources":["App.js","index.js"],"names":["URL","App","state","goods","error","_this2","this","_this$state","react_default","a","createElement","className","style","color","type","onClick","fetch","then","response","json","goodsFromServer","setState","catch","Object","toConsumableArray","sort","b","name","localeCompare","slice","filter","good","App_GoodsList","React","Component","GoodsList","_ref","map","_ref2","id","key","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"mMAKMA,SAAM,yEAENC,6MACJC,MAAQ,CACNC,MAAO,GACPC,MAAO,4EAGA,IAAAC,EAAAC,KAAAC,EACkBD,KAAKJ,MAAtBC,EADDI,EACCJ,MAAOC,EADRG,EACQH,MA2Cf,OACEI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZP,GAASI,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAAEC,MAAO,QAAUT,GAC1CI,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASC,QA/CL,WACnBC,MAAMhB,GACHiB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAACG,GACLf,EAAKgB,SAAS,CACZlB,MAAOiB,MAGVE,MAAM,kBAAMjB,EAAKgB,SAAS,CACzBjB,MAAO,cAsCT,kBAIAI,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASC,QAtCI,WAC5BC,MAAMhB,GACHiB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAACG,GACLf,EAAKgB,SAAS,CACZlB,MAAOoB,OAAAC,EAAA,EAAAD,CAAIH,GACRK,KAAK,SAAChB,EAAGiB,GAAJ,OAAUjB,EAAEkB,KAAKC,cAAcF,EAAEC,QACtCE,MAAM,EAAG,OAGfP,MAAM,kBAAMjB,EAAKgB,SAAS,CACzBjB,MAAO,cA2BT,sBAIAI,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASC,QA3BL,WACnBC,MAAMhB,GACHiB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAACG,GACLf,EAAKgB,SAAS,CACZlB,MAAOiB,EACJU,OAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKlB,YAG1BS,MAAM,kBAAMjB,EAAKgB,SAAS,CACzBjB,MAAO,cAiBT,kBAIAI,EAAAC,EAAAC,cAACsB,EAAD,CAAW7B,MAAOA,YAnER8B,IAAMC,WAyElBC,EAAY,SAAAC,GAAA,IAAGjC,EAAHiC,EAAGjC,MAAH,OAChBK,EAAAC,EAAAC,cAAA,UACGP,EAAMkC,IACL,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,GAAIZ,EAAPW,EAAOX,KAAMd,EAAbyB,EAAazB,MAAb,OACEL,EAAAC,EAAAC,cAAA,MAAI8B,IAAKD,EAAI3B,MAAO,CAAEC,UACnBc,OAeI1B,IChGfwC,IAASC,OACPlC,EAAAC,EAAAC,cAACiC,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.d65a86e3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\n// eslint-disable-next-line max-len\nconst URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n    error: '',\n  };\n\n  render() {\n    const { goods, error } = this.state;\n    const loadAllGoods = () => {\n      fetch(URL)\n        .then(response => response.json())\n        .then((goodsFromServer) => {\n          this.setState({\n            goods: goodsFromServer,\n          });\n        })\n        .catch(() => this.setState({\n          error: 'ERROR',\n        }));\n    };\n\n    const load5FirstSortedGoods = () => {\n      fetch(URL)\n        .then(response => response.json())\n        .then((goodsFromServer) => {\n          this.setState({\n            goods: [...goodsFromServer]\n              .sort((a, b) => a.name.localeCompare(b.name))\n              .slice(0, 5),\n          });\n        })\n        .catch(() => this.setState({\n          error: 'ERROR',\n        }));\n    };\n\n    const loadRedGoods = () => {\n      fetch(URL)\n        .then(response => response.json())\n        .then((goodsFromServer) => {\n          this.setState({\n            goods: goodsFromServer\n              .filter(good => good.color === 'red'),\n          });\n        })\n        .catch(() => this.setState({\n          error: 'ERROR',\n        }));\n    };\n\n    return (\n      <div className=\"App\">\n        {error && <span style={{ color: 'red' }}>{error}</span>}\n        <h1>Goods</h1>\n\n        <button type=\"button\" onClick={loadAllGoods}>\n          Load all goods\n        </button>\n\n        <button type=\"button\" onClick={load5FirstSortedGoods}>\n          Load 5 first goods\n        </button>\n\n        <button type=\"button\" onClick={loadRedGoods}>\n          Load red goods\n        </button>\n\n        <GoodsList goods={goods} />\n      </div>\n    );\n  }\n}\n\nconst GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(\n      ({ id, name, color }) => (\n        <li key={id} style={{ color }}>\n          {name}\n        </li>\n      )\n    )}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n  })).isRequired,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}